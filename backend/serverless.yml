service: candidates-portal-backend

package:
  exclude:
    - coverage/**
    - jest.config.js
    - README.md
    - yarn.lock
    - .dynamodb/**
    - test/**
    - seed/**
    - handler.test.js

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  versionFunctions: false
  logRetentionInDays: 30
  iamRoleStatements:
   - Effect: Allow
     Action:
      - dynamodb:GetItem
      - dynamodb:UpdateItem
     Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  environment:
    DYNAMODB_TABLE: candidates-portal-${self:provider.stage}
    FRONTEND_URL: http://realchangers-candidates-portal-${self:provider.stage}-frontend.s3-website-eu-west-1.amazonaws.com

functions:
  query:
    handler: handler.query
    events:
      - http:
          path: query
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-1:222582984103:userpool/eu-west-1_hVc5GjCPH
          cors:
            origin: ${self:provider.environment.FRONTEND_URL}
            maxAge: 86400
      - http:
          path: query
          method: get
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-1:222582984103:userpool/eu-west-1_hVc5GjCPH
          cors:
            origin: ${self:provider.environment.FRONTEND_URL}
            maxAge: 86400
  database:
    handler: database.handler
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - UsersTable
              - StreamArn

resources:
  Description: Candidates Portal - Backend
  Resources:
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE # values: (NEW_IMAGE | OLD_IMAGE | NEW_AND_OLD_IMAGES | KEYS_ONLY)
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

plugins:
  - serverless-dynamodb-local
  - serverless-plugin-offline-dynamodb-stream
  - serverless-offline # must be last plugin

custom:
  dynamodb:
    host: localhost
    port: 8000
    start:
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:provider.environment.DYNAMODB_TABLE}
            sources: [./seed/users.json]
  dynamodbStream:
    host: localhost
    port: 8000
    streams:
      - table: ${self:provider.environment.DYNAMODB_TABLE}
        functions:
          - database
  serverless-offline:
    port: 8080
